=== IN PROGRESS ===

* Inför ett web-applikation som konsumerar tjänster för att säkerställa att icke-pu:ar hanteras korrekt.

* Cleanup: Se över strukturen på service-suite-context. Ta bort oanvända abstraktioner.

* Tjänstekonsumenter ska kunna använda Astrix som factory-bean för att skapa tjänster på ett enkelt sätt.
	- Astrix-tjänster ska kunna autowiras in i de klasser som använder dessa.


=== BACKLOG ===

* Hur ska AstrixBeanDefnitionRegistryPlugin's hantera beroenden? De bönor som dessa registrerar kommer inte
hanteras av Astrix. Hur ska då AstrixPlugins/ExternalDepenendencies/ServiceDependencies hanteras?

* Cleanup: AstrixServiceProviderPlugin ska inte behöva skapa en AstrixServiceProvider utan AstrixServiceFactory[]

* Cleanup: AstrixServiceBus-pu ska använda AstrixRemotingFrameworkBean snarare än interna klasser för att skapa
en astrix-runtime.

* Skapa enbart en instans av varje tjänst.

* LifeCycle-hantering av tjänster och andra astrix-komponenter.

* Versionshantering av tjänster

* Feltolerans

* Hantera att tjänstebussen inte är tillgänglig när man skapar en tjänst

* ServiceUnavailable

* Skapa struktur som tillåter enhetstestning i större omfattning

* Se över modulstruktur

* Se över namngivning på moduler/klasser




=== DONE ===

* Cleanup: Tydlig life-cycle för plugins. När de skapas ska alla dess dependencies injectas.
Det innebär att enbart AstrixContext får skapa plugin:er, och att AstrixContext injectar 
dependencies i samband med skapandet.

* Cleanup: Ta bort AstrixContextAware. Ingen plugin ska behöva tillgång till AstrixContext
